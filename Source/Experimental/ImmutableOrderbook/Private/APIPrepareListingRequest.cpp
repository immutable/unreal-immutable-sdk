/**
 * TS SDK API
 * running ts sdk as an api
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "APIPrepareListingRequest.h"

#include "ImmutableOrderbookModule.h"
#include "APIHelpers.h"

#include "Templates/SharedPointer.h"

namespace ImmutableOrderbook
{

void APIPrepareListingRequest::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("buy")); WriteJsonValue(Writer, Buy);
	Writer->WriteIdentifierPrefix(TEXT("makerAddress")); WriteJsonValue(Writer, MakerAddress);
	if (OrderExpiry.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("orderExpiry")); WriteJsonValue(Writer, OrderExpiry.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("sell")); WriteJsonValue(Writer, Sell);
	Writer->WriteObjectEnd();
}

bool APIPrepareListingRequest::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("buy"), Buy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("makerAddress"), MakerAddress);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("orderExpiry"), OrderExpiry);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("sell"), Sell);

	return ParseSuccess;
}

}
