/**
 * TS SDK API
 * running ts sdk as an api
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "APISignableActionMessage.h"

#include "ImmutableOrderbookModule.h"
#include "APIHelpers.h"

#include "Templates/SharedPointer.h"

namespace ImmutableOrderbook
{

void APISignableActionMessage::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Domain.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("domain")); WriteJsonValue(Writer, Domain.GetValue());
	}
	if (Types.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("types")); WriteJsonValue(Writer, Types.GetValue());
	}
	if (Message.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("message")); WriteJsonValue(Writer, Message.GetValue());
	}
	if (PrimaryType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("primaryType")); WriteJsonValue(Writer, PrimaryType.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool APISignableActionMessage::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("domain"), Domain);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("types"), Types);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("message"), Message);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("primaryType"), PrimaryType);

	return ParseSuccess;
}

}
