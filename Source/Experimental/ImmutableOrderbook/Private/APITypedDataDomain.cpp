/**
 * TS SDK API
 * running ts sdk as an api
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "APITypedDataDomain.h"

#include "ImmutableOrderbookModule.h"
#include "APIHelpers.h"

#include "Templates/SharedPointer.h"

namespace ImmutableOrderbook
{

void APITypedDataDomain::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (ChainId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("chainId")); WriteJsonValue(Writer, ChainId.GetValue());
	}
	if (Name.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name.GetValue());
	}
	if (Salt.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("salt")); WriteJsonValue(Writer, Salt.GetValue());
	}
	if (VerifyingContract.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("verifyingContract")); WriteJsonValue(Writer, VerifyingContract.GetValue());
	}
	if (Version.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("version")); WriteJsonValue(Writer, Version.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool APITypedDataDomain::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("chainId"), ChainId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("salt"), Salt);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("verifyingContract"), VerifyingContract);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("version"), Version);

	return ParseSuccess;
}

}
