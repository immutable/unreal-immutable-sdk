/**
 * Immutable zkEVM API
 * Immutable Multi Rollup API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "APIPassportApiOperations.h"

#include "ImmutablezkEVMAPIModule.h"
#include "APIHelpers.h"

#include "Dom/JsonObject.h"
#include "Templates/SharedPointer.h"
#include "HttpModule.h"
#include "PlatformHttp.h"

namespace ImmutablezkEVMAPI
{

FString APIPassportApi::GetLinkedAddressesRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("user_id"), FStringFormatArg(ToUrlString(UserId)) },
	{ TEXT("chain_name"), FStringFormatArg(ToUrlString(ChainName)) } };

	FString Path = FString::Format(TEXT("/v1/chains/{chain_name}/passport/users/{user_id}/linked-addresses"), PathParams);

	return Path;
}

void APIPassportApi::GetLinkedAddressesRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

}

void APIPassportApi::GetLinkedAddressesResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("User&#39;s list of linked addresses response"));
		break;
	case 400:
		SetResponseString(TEXT("BadRequestError"));
		break;
	case 401:
		SetResponseString(TEXT("UnauthorizedError"));
		break;
	case 403:
		SetResponseString(TEXT("ForbiddenError"));
		break;
	case 429:
		SetResponseString(TEXT("TooManyRequestsError"));
		break;
	case 500:
		SetResponseString(TEXT("InternalServerError"));
		break;
	case 0:
	default:
		SetResponseString(TEXT("unexpected error"));
		break;
	}
}

bool APIPassportApi::GetLinkedAddressesResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

}
