/**
 * Immutable zkEVM API
 * Immutable Multi Rollup API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "APIUserInfo.h"

#include "ImmutablezkEVMAPIModule.h"
#include "APIHelpers.h"

#include "Templates/SharedPointer.h"

namespace ImmutablezkEVMAPI
{

void APIUserInfo::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("sub")); WriteJsonValue(Writer, Sub);
	if (Email.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("email")); WriteJsonValue(Writer, Email.GetValue());
	}
	if (PassportAddress.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("passport_address")); WriteJsonValue(Writer, PassportAddress.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("linked_addresses")); WriteJsonValue(Writer, LinkedAddresses);
	Writer->WriteObjectEnd();
}

bool APIUserInfo::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("sub"), Sub);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("email"), Email);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("passport_address"), PassportAddress);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("linked_addresses"), LinkedAddresses);

	return ParseSuccess;
}

}
