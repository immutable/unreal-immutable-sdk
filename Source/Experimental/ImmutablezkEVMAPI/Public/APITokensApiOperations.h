/**
 * Immutable zkEVM API
 * Immutable Multi Rollup API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "APIBaseModel.h"
#include "APITokensApi.h"

#include "APIAPIError400.h"
#include "APIAPIError404.h"
#include "APIAPIError500.h"
#include "APIAssetVerificationStatus.h"
#include "APIGetTokenResult.h"
#include "APIListTokensResult.h"

namespace ImmutablezkEVMAPI
{

/* Get single ERC20 token
 *
 * Get single ERC20 token
*/
class IMMUTABLEZKEVMAPI_API APITokensApi::GetERC20TokenRequest : public Request
{
public:
    virtual ~GetERC20TokenRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The address of contract */
	FString ContractAddress;
	/* The name of chain */
	FString ChainName;
};

class IMMUTABLEZKEVMAPI_API APITokensApi::GetERC20TokenResponse : public Response
{
public:
    virtual ~GetERC20TokenResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    APIGetTokenResult Content;
};

/* List ERC20 tokens
 *
 * List ERC20 tokens
*/
class IMMUTABLEZKEVMAPI_API APITokensApi::ListERC20TokensRequest : public Request
{
public:
    virtual ~ListERC20TokensRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The name of chain */
	FString ChainName;
	/* Datetime to use as the oldest updated timestamp */
	TOptional<FDateTime> FromUpdatedAt;
	/* List of verification status to filter by */
	TOptional<TArray<APIAssetVerificationStatus>> VerificationStatus;
	/* [Experimental - Canonical token data may be updated] Filter by canonical or non-canonical tokens. */
	TOptional<bool> IsCanonical;
	/* Encoded page cursor to retrieve previous or next page. Use the value returned in the response. */
	TOptional<FString> PageCursor;
	/* Maximum number of items to return */
	TOptional<int32> PageSize;
};

class IMMUTABLEZKEVMAPI_API APITokensApi::ListERC20TokensResponse : public Response
{
public:
    virtual ~ListERC20TokensResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    APIListTokensResult Content;
};

}
