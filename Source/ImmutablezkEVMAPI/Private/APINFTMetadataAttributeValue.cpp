/**
 * Immutable zkEVM API
 * Immutable Multi Rollup API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "APINFTMetadataAttributeValue.h"

#include "ImmutablezkEVMAPIModule.h"
#include "APIHelpers.h"

#include "Templates/SharedPointer.h"

namespace ImmutablezkEVMAPI
{

void APINFTMetadataAttributeValue::WriteJson(JsonWriter& Writer) const
{
	if (const FString* FStringValue = OneOf.TryGet<FString>())
	{
		WriteJsonValue(Writer, *FStringValue);
	}
	else if (const bool* BoolValue = OneOf.TryGet<bool>())
	{
		WriteJsonValue(Writer, *BoolValue);
	}
	else if (const double* DoubleValue = OneOf.TryGet<double>())
	{
		WriteJsonValue(Writer, *DoubleValue);
	}
}

bool APINFTMetadataAttributeValue::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	FString FStringValue;
	if (const bool bIsFString = TryGetJsonValue(JsonValue, FStringValue))
	{
		OneOf.Set<FString>(FStringValue);
		return true;
	}

	bool BoolValue;
	if (const bool bIsBool = TryGetJsonValue(JsonValue, BoolValue))
	{
		OneOf.Set<bool>(BoolValue);
		return true;
	}

	double DoubleValue;
	if (const bool bIsDouble = TryGetJsonValue(JsonValue, DoubleValue))
	{
		OneOf.Set<double>(DoubleValue);
		return true;
	}

	return false;
}

}
