/**
 * Immutable zkEVM API
 * Immutable Multi Rollup API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "APIBaseModel.h"
#include "APIPassportProfileApi.h"

#include "APIAPIError400.h"
#include "APIAPIError401.h"
#include "APIAPIError403.h"
#include "APIAPIError500.h"
#include "APIBasicAPIError.h"
#include "APILinkWalletV2Request.h"
#include "APIUserInfo.h"
#include "APIWallet.h"

namespace ImmutablezkEVMAPI
{

/* Get all info for a Passport user
 *
 * Get all the info for an authenticated Passport user
*/
class IMMUTABLEZKEVMAPI_API APIPassportProfileApi::GetUserInfoRequest : public Request
{
public:
    virtual ~GetUserInfoRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class IMMUTABLEZKEVMAPI_API APIPassportProfileApi::GetUserInfoResponse : public Response
{
public:
    virtual ~GetUserInfoResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    APIUserInfo Content;
};

/* Link wallet v2
 *
 * Link an external EOA wallet to an Immutable Passport account by providing an EIP-712 signature.
*/
class IMMUTABLEZKEVMAPI_API APIPassportProfileApi::LinkWalletV2Request : public Request
{
public:
    virtual ~LinkWalletV2Request() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	TOptional<APILinkWalletV2Request> APILinkWalletV2Request;
};

class IMMUTABLEZKEVMAPI_API APIPassportProfileApi::LinkWalletV2Response : public Response
{
public:
    virtual ~LinkWalletV2Response() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    APIWallet Content;
};

}
