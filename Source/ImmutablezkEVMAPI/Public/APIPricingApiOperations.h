/**
 * Immutable zkEVM API
 * Immutable Multi Rollup API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "APIBaseModel.h"
#include "APIPricingApi.h"

#include "APIAPIError400.h"
#include "APIAPIError401.h"
#include "APIAPIError403.h"
#include "APIAPIError404.h"
#include "APIAPIError429.h"
#include "APIAPIError500.h"
#include "APIQuotesForNFTsResult.h"
#include "APIQuotesForStacksResult.h"

namespace ImmutablezkEVMAPI
{

/* Get pricing data for a list of token ids
 *
 * pricing data for a list of token ids
*/
class IMMUTABLEZKEVMAPI_API APIPricingApi::QuotesForNFTsRequest : public Request
{
public:
    virtual ~QuotesForNFTsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The name of chain */
	FString ChainName;
	/* Contract address for collection that these token ids are on */
	FString ContractAddress;
	/* List of token ids to get pricing data for */
	TArray<FString> TokenId;
	/* Filters the active listings, bids, floor listing and top bid by the specified payment token, either the address of the payment token contract or 'NATIVE'. */
	TOptional<FString> PaymentToken;
	/* Encoded page cursor to retrieve previous or next page. Use the value returned in the response. */
	TOptional<FString> PageCursor;
};

class IMMUTABLEZKEVMAPI_API APIPricingApi::QuotesForNFTsResponse : public Response
{
public:
    virtual ~QuotesForNFTsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    APIQuotesForNFTsResult Content;
};

/* Get pricing data for a list of stack ids
 *
 * Get pricing data for a list of stack ids
*/
class IMMUTABLEZKEVMAPI_API APIPricingApi::QuotesForStacksRequest : public Request
{
public:
    virtual ~QuotesForStacksRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The name of chain */
	FString ChainName;
	/* Contract address for collection that these stacks are on */
	FString ContractAddress;
	/* List of stack ids to get pricing data for */
	TArray<FGuid> StackId;
	/* Filters the active listings, bids, floor listing and top bid by the specified payment token, either the address of the payment token contract or 'NATIVE'. */
	TOptional<FString> PaymentToken;
	/* Encoded page cursor to retrieve previous or next page. Use the value returned in the response. */
	TOptional<FString> PageCursor;
};

class IMMUTABLEZKEVMAPI_API APIPricingApi::QuotesForStacksResponse : public Response
{
public:
    virtual ~QuotesForStacksResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    APIQuotesForStacksResult Content;
};

}
