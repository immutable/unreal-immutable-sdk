{{>licenseInfo}}

#pragma once

{{#models}}
	{{#model}}
		{{#oneOf}}
			{{#-first}}
#include "Misc/TVariant.h"

			{{/-first}}
		{{/oneOf}}
	{{/model}}
{{/models}}
#include "{{modelNamePrefix}}BaseModel.h"
{{#imports}}{{{import}}}
{{/imports}}

{{#models}}
{{#model}}

/*
 * F{{classname}}
 *
 * {{description}}
 */
class {{dllapi}} F{{classname}} : public F{{unrealModuleName}}Model
{
public:
	virtual ~F{{classname}}() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	{{#isString}}
	{{#isEnum}}
	{{#allowableValues}}
	enum class Values
	{
		{{#enumVars}}
		{{name}},
		{{/enumVars}}
	};

	Values Value{{#defaultValue}} = {{{.}}}{{/defaultValue}};
	{{/allowableValues}}

	static FString EnumToString(const Values& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, Values& EnumValue);
	{{/isEnum}}
	{{^isEnum}}
	FString Value{{#defaultValue}} = {{{.}}}{{/defaultValue}};
	{{/isEnum}}
	{{/isString}}
	{{#vars}}
	{{#isEnum}}
	{{#allowableValues}}
	enum class {{{enumName}}}
	{
		{{#enumVars}}
		{{name}},
		{{/enumVars}}
	};
	{{/allowableValues}}

	static FString EnumToString(const {{{enumName}}}& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, {{{enumName}}}& EnumValue);
	{{#description}}/* {{{.}}} */
	{{/description}}{{^required}}TOptional<{{/required}}{{{datatypeWithEnum}}}{{^required}}>{{/required}} {{name}}{{#required}}{{#defaultValue}} = {{{.}}}{{/defaultValue}}{{/required}};
	{{/isEnum}}
	{{^isEnum}}
	{{^oneOf}}
	{{#description}}/* {{{.}}} */
	{{/description}}{{^required}}TOptional<{{/required}}{{#isPrimitiveType}}{{{datatype}}}{{/isPrimitiveType}}{{^isPrimitiveType}}{{#isContainer}}{{{baseType}}}<F{{{complexType}}}>{{/isContainer}}{{^isContainer}}F{{{datatype}}}{{/isContainer}}{{/isPrimitiveType}}{{^required}}>{{/required}} {{name}}{{#required}}{{#defaultValue}} = {{{.}}}{{/defaultValue}}{{/required}};
	{{/oneOf}}
	{{/isEnum}}
	{{/vars}}
	{{#oneOf}}
	{{#-first}}
	TVariant<{{#composedSchemas}}{{#oneOf}}{{^isPrimitiveType}}F{{/isPrimitiveType}}{{dataType}}{{^-last}}, {{/-last}}{{/oneOf}}{{/composedSchemas}}> OneOf;
	{{/-first}}
	{{/oneOf}}
};

{{/model}}
{{/models}}